@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Macros.PartialViewMacroPage
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    var startNodeId = Model.MacroParameters["startNodeId"] != null ? Model.MacroParameters["startNodeId"] : Model.Content.Id;


    var numberOfPosts = 3;
    if (Model.MacroParameters["numberOfPosts"] != null)
    {
        int.TryParse((string)Model.MacroParameters["numberOfPosts"], out numberOfPosts);
    }
}
@if (startNodeId != null)
{

    var startNode = Umbraco.Content(startNodeId);

    if (startNode == null)
    {
        <div class="blogposts">
            <h1>There are no posts at this time, try again later.</h1>
        </div>
        return;
    }

    //Gets all blogposts to calculate pages
    var blogposts = startNode.Children.OrderBy(x => x.CreateDate).ToList();
    var pageCount = (int)Math.Ceiling((double)blogposts.Count / (double)numberOfPosts);
    //gets the page from the querystring and sets it to one if it is out of range
    var page = 1;
    // if (!string.IsNullOrEmpty(Request.QueryString["page"]))

    var pageid = Context.Request.Query["page"];
    if (!string.IsNullOrEmpty(pageid))
    {
        //int.TryParse(Request.QueryString["page"], out page);
        int.TryParse(Context.Request.Query["page"], out page);
        if (page <= 0 || page > pageCount)
        {
            page = 1;
        }
    }
    //Gets the blogposts for the current page
    var pagedBlogposts = blogposts.Skip((page - 1) * numberOfPosts).Take(numberOfPosts).ToList();

    if (pagedBlogposts.Count > 0)
    {
        <div class="blogposts">
            @foreach (ContentModels.BlogPost post in pagedBlogposts)
            {
                <div class="col-md-6">
                    <div class="blog-post">
                        <div class="post-media">
                            <img src="~/assets/images/blog/blog3.jpg" alt="">
                        </div>
                        <div class="post-desc">
                            <h4>@post.PageTitle</h4>
                            <h5>12 May, 2015 / 11 Comments</h5>
                            <p>@Html.Raw(@post.BlogPostDetail)</p>
                            <a href=@post.Url() class="btn btn-gray-border">Read More</a>

                        </div>
                    </div>
                </div>

            }
        </div>
    }

    if (blogposts.Count > numberOfPosts)
    {
        <div class="pagination">
            <nav class="nav-bar nav-bar--center">
                @if (page <= 1)
                {
                    <span class="nav-link nav-link--black nav-link--disabled">Prev</span>
                }
                else
                {
                    <a class="nav-link nav-link--black" href="@(Model.Content.Url() + "?page=" + (page - 1))">Prev</a>
                }

                @for (int i = 1; i <= pageCount; i++)
                {
                    <a class="nav-link nav-link--black @(page == i ? " nav-link--active" : null)" href="@(Model.Content.Url() + "?page=" + i)">@i</a>
                }
                @if (page == pageCount)
                {
                    <span class="nav-link nav-link--black nav-link--disabled">Next</span>
                }
                else
                {
                    <a class="nav-link nav-link--black" href="@(Model.Content.Url() + "?page=" + (page + 1))">Next</a>
                }

            </nav>
        </div>
    }
}